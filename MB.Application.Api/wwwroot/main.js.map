{"version":3,"sources":["./src/app/user-summary/user-summary.component.ts","./src/app/user-summary/user-summary.component.html","./src/environments/environment.ts","./src/app/spinner/spinner.component.ts","./src/app/spinner/spinner.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/fund-transfer/fund-transfer.component.ts","./src/app/fund-transfer/fund-transfer.component.html","./src/app/app.module.ts","./src/app/model/currency.ts","./src/app/account-transactions/account-transactions.component.html","./src/app/account-transactions/account-transactions.component.ts","./src/app/model/account.ts","./src/app/model/user.ts","./src/app/model/transaction.ts","./src/app/app-routing.module.ts","./src/app/account-summary/account-summary.component.ts","./src/app/account-summary/account-summary.component.html","./src/app/api.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { User } from '../model/user';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-summary',\n  templateUrl: './user-summary.component.html',\n  styleUrls: ['./user-summary.component.css']\n})\nexport class UserSummaryComponent implements OnInit {\n  user: User = new User(0,'','');\n  loading: boolean = true;\n  errorMessage: string = \"\";\n  showFundsTransfer: boolean = false;\n  isDepositTransfer: boolean = true;\n\n  constructor(private apiService: ApiService, private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    var id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.apiService.getUserById(Number(id)).subscribe({\n      next: result => {\n        this.user = result;\n        this.loading = false;\n      },\n      error: message => {\n        console.log(\"Receved error: \" + message);\n        this.errorMessage = message;\n        this.loading = false;\n      }\n    });\n  }\n\n  withdraw() {\n    this.isDepositTransfer = false;\n    this.showFundsTransfer = true;\n  }\n\n  deposit(){\n    this.isDepositTransfer = true;\n    this.showFundsTransfer = true;\n  }\n\n  closeFunds(status: boolean) {\n    this.showFundsTransfer = !status;\n  }\n}\n","<div [hidden]=\"loading\" class=\"componentBody\">\n  <p class=\"small\">Hello, welcome back!</p>\n  <p>{{user?.name}} {{user?.surname}}</p>\n  <div class=\"fundsTransfer\" *ngIf=\"!showFundsTransfer\">\n    <a (click)=\"deposit()\">Deposit</a> - <a (click)=\"withdraw()\">Withdraw</a>\n  </div>\n  <app-fund-transfer *ngIf=\"showFundsTransfer\" [deposit]=\"isDepositTransfer\" (notify)=\"closeFunds($event)\"></app-fund-transfer>\n</div>\n<app-spinner *ngIf=\"loading\"></app-spinner>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spinnerarea\">\n  <div class=\"spinner\"></div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor() {\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-light bg-light\">\n  <ul class=\"nav nav-pills\">\n    <li><a class=\"nav-link\" [routerLink]=\"['/user', 1]\">Home</a></li>\n    <li><a class=\"nav-link\" [routerLink]=\"['/account', 1]\">My Account</a></li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Currency } from '../model/currency';\nimport { Transaction } from '../model/transaction';\n\n@Component({\n  selector: 'app-fund-transfer',\n  templateUrl: './fund-transfer.component.html',\n  styleUrls: ['./fund-transfer.component.css']\n})\nexport class FundTransferComponent implements OnInit {\n  @Input()\n  public deposit: boolean = true;\n  @Output() notify: EventEmitter<boolean> = new EventEmitter();\n  description: string = \"\";\n  amount: number = 0;\n  currency: string = \"\";\n  confirm: string = \"\";\n  currencies: Currency[] = [];\n  errorMessage: string = \"\";\n  loading: boolean = true;\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.confirm = this.deposit ? \"Deposit\" :  \"withdraw\";\n\n    this.apiService.getSupportedCurrencies().subscribe({\n      next: result => {\n        this.currencies = result;\n        this.loading = false;\n      },\n      error: message => {\n        console.log(\"Receved error: \" + message);\n        this.errorMessage = message;\n        this.loading = false;\n      }\n    });\n  }\n\n  closeFunds() {\n    this.notify.emit(true);\n  }\n\n  transferFunds(){\n    var currencyID = 1;\n    var accountID = 1;\n    var transaction = new Transaction(0,this.description, this.amount, 0, currencyID, accountID, '');\n\n    this.apiService.postTransaction(transaction).subscribe({\n      next: result => {\n        console.log(result);\n      },\n      error: message => {\n        console.log(\"Receved error: \" + message);\n        this.errorMessage = message;\n      }\n    });\n  }\n\n  changedCurrency(e: Event) {\n\n  }\n}\n","<div class=\"formTransfer\">\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <p class=\"description\">{{confirm}}</p>\n    </div>\n  </div>\n  <div>\n    <div class=\"form-group\">\n      <small><label for=\"description\">Description</label></small>\n      <input id=\"description\" class=\"form-control\" type=\"text\" [(ngModel)]=\"description\"/>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <small><label for=\"amount\">Amount</label></small>\n        <input id=\"amount\" class=\"form-control\" type=\"text\" [(ngModel)]=\"amount\"/>\n      </div>\n      <div class=\"col\">\n        <small><label for=\"amount\">Currency</label></small>\n        <select formControlName=\"categories\" class=\"form-control\" (change)=\"changedCurrency($event)\">\n          <option *ngFor=\"let currency of currencies\">{{currency.code}}</option>\n        </select>\n      </div>\n    </div>\n  </div>\n  <div class=\"buttons\">\n    <button (click)=\"closeFunds()\" class=\"btn space-right\">Close</button>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"transferFunds()\">{{confirm}}</button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AccountSummaryComponent } from './account-summary/account-summary.component';\nimport { UserSummaryComponent } from './user-summary/user-summary.component';\nimport { FundTransferComponent } from './fund-transfer/fund-transfer.component';\nimport { AccountTransactionsComponent } from './account-transactions/account-transactions.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { ApiService } from './api.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'account/:id', component: AccountSummaryComponent },\n  { path: 'account', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'user/:id', component: UserSummaryComponent },\n  { path: 'user', redirectTo: '/home', pathMatch: 'full' },\n  { path: '', component: AppComponent },\n  { path: '**', component: AppComponent }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccountSummaryComponent,\n    UserSummaryComponent,\n    FundTransferComponent,\n    AccountTransactionsComponent,\n    SpinnerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [ApiService, HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Currency {\r\n  public id: number;\r\n  public name: string;\r\n  public code: string;\r\n\r\n  constructor(id: number, name: string, code: string){\r\n    this.id = id;\r\n    this.name = name;\r\n    this.code = code;\r\n  }\r\n}\r\n","<div [hidden]=\"loading\" class=\"componentBody\">\n  <p>show here transactions</p>\n</div>\n<app-spinner *ngIf=\"loading\"></app-spinner>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account-transactions',\n  templateUrl: './account-transactions.component.html',\n  styleUrls: ['./account-transactions.component.css']\n})\nexport class AccountTransactionsComponent implements OnInit {\n  loading: boolean;\n\n  constructor() {\n    this.loading = true;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Currency } from \"./currency\";\r\n\r\nexport class Account {\r\n  public id: number;\r\n  public number: number;\r\n  public defaultCurrencyId: number;\r\n  public defaultCurrency: Currency;\r\n  public userId: number;\r\n\r\n  constructor(id: number, number: number, defaultCurrencyId: number, userId: number){\r\n    this.id = id;\r\n    this.number = number;\r\n    this.defaultCurrencyId = defaultCurrencyId;\r\n    this.userId = userId;\r\n    this.defaultCurrency = new Currency(0,'','');\r\n  }\r\n}\r\n","export class User {\r\n  public id: number;\r\n  public name: string;\r\n  public surname: string;\r\n\r\n  constructor(id: number, name : string, surname : string){\r\n    this.id = id;\r\n    this.name = name;\r\n    this.surname = surname;\r\n  }\r\n}\r\n","export class Transaction {\r\n  public id: number;\r\n  public description: string;\r\n  public amount: number;\r\n  public originalAmount: number;\r\n  public currencyId: number;\r\n  public accountId: number;\r\n  public dateTime: string;\r\n\r\n  constructor(id: number,\r\n    description: string,\r\n    amount: number,\r\n    originalAmount: number,\r\n    currencyId: number,\r\n    accountId: number,\r\n    dateTime: string){\r\n    this.id = id;\r\n    this.description = description;\r\n    this.amount = amount;\r\n    this.originalAmount = originalAmount;\r\n    this.currencyId = currencyId;\r\n    this.accountId = accountId;\r\n    this.dateTime = dateTime;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Account } from '../model/account';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-account-summary',\n  templateUrl: './account-summary.component.html',\n  styleUrls: ['./account-summary.component.css']\n})\nexport class AccountSummaryComponent implements OnInit {\n  account: Account = new Account(0,0,0,0);\n  loading: boolean = true;\n  errorMessage: string = \"\";\n  balance: number = 0;\n  constructor(private apiService: ApiService, private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      let userId = +params['uid'];\n      if(!userId || userId == 0)\n        return;\n\n      this.apiService.getAccountByUserId(userId).subscribe({\n        next: result => {\n          this.account = result[0];\n\n          this.apiService.getAccountBalanceByAccountId(this.account.id).subscribe({\n            next: (balance: number) => {\n              this.balance = balance;\n              this.loading = false;\n            },\n            error: (message: string) => {\n              this.handleError(message);\n            }\n          });\n        },\n        error: message => {\n          this.handleError(message);\n        }\n      });\n    });\n  }\n  handleError(message: string) {\n    console.log(\"Receved error: \" + message);\n    this.errorMessage = message;\n    this.loading = false;\n  }\n}\n","<div [hidden]=\"loading\" class=\"componentBody\">\n  <p>Account number: {{account.number}}</p>\n  <p>Balance: {{balance}} {{account.defaultCurrency.code}}</p>\n</div>\n<app-spinner *ngIf=\"loading\"></app-spinner>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Transaction } from './model/transaction';\nimport { Account } from './model/account';\nimport { Currency } from './model/currency';\nimport { User } from './model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  baseURL: string = \"https://localhost:5001/api\";\n\n  constructor(private http: HttpClient) {\n  }\n\n  getUserById(userId: number): Observable<User> {\n    return this.http.get<User>(this.baseURL + '/Users/' + userId);\n  }\n\n  getTransactionsByAccountId(accountId: number): Observable<Transaction[]> {\n    return this.http.get<Transaction[]>(this.baseURL + '/Transactions/' + accountId);\n  }\n\n  getAccountByUserId(userId: number): Observable<Account[]> {\n    return this.http.get<Account[]>(this.baseURL + '/Accounts?filter=UserId eq ' + userId + '&$expand=DefaultCurrency');\n  }\n\n  getSupportedCurrencies(): Observable<Currency[]> {\n    return this.http.get<Currency[]>(this.baseURL + '/Currencies');\n  }\n\n  getAccountBalanceByAccountId(accountId: number): Observable<number> {\n    return this.http.get<number>(this.baseURL + '/Accounts/' + accountId + '/balance');\n  }\n\n  postTransaction(transaction: Transaction): Observable<Transaction> {\n    return this.http.post<Transaction>(this.baseURL + '/Transactions', transaction);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}