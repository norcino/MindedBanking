{"version":3,"sources":["./src/app/csv-export.service.ts","./src/app/user-summary/user-summary.component.ts","./src/app/user-summary/user-summary.component.html","./src/environments/environment.ts","./src/app/spinner/spinner.component.ts","./src/app/spinner/spinner.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/fund-transfer/fund-transfer.component.ts","./src/app/fund-transfer/fund-transfer.component.html","./src/app/app.module.ts","./src/app/model/currency.ts","./src/app/account-transactions/account-transactions.component.html","./src/app/account-transactions/account-transactions.component.ts","./src/app/model/account.ts","./src/app/model/user.ts","./src/app/model/transaction.ts","./src/app/app-routing.module.ts","./src/app/account-summary/account-summary.component.ts","./src/app/account-summary/account-summary.component.html","./src/app/api.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CsvExportService {\n\n  constructor() { }\n\n  // Export to CSV\n  // ref.: https://medium.com/mycoding/export-json-to-csv-file-in-angular-d1b674ec79ed\n  convertToCSV(transactions: any[], fieldsToBeExported: string[], headers: string[]) {\n    let array = typeof transactions != 'object' ? JSON.parse(transactions) : transactions;\n    let str = '';\n\n    let row = '_,';\n    for (let index in headers) {\n      row += headers[index] + ',';\n    }\n    row = row.slice(0, -1);\n    str += row + '\\r\\n';\n\n    for (let i = 0; i < array.length; i++) {\n      let line = (i+1)+'';\n      for (let index in fieldsToBeExported) {\n        let head = fieldsToBeExported[index];\n        console.log(array[i]);\n\n        if(head.includes('.'))\n          line += ',' + this.handleNestedProperty(array[i], head);\n        else\n          line += ',' + array[i][head];\n      }\n      str += line + '\\r\\n';\n    }\n    return str;\n  }\n\n  handleNestedProperty(object: any, property: string) {\n    return this.getObjectPropertyRecursively(object, property.split('.'));\n  }\n\n  getObjectPropertyRecursively(object: any, tokens: string[]): string {\n    if(tokens.length > 1) {\n      return this.getObjectPropertyRecursively(object[tokens[0]], tokens.slice(1));\n    }\n    return object[tokens[0]];\n  }\n\n  downloadFile(transactions: any[], fieldsToBeExported: string[], headers: string[], filename = 'data') {\n    let csvData = this.convertToCSV(transactions, fieldsToBeExported, headers);\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\n    let dwldLink = document.createElement(\"a\");\n    let url = URL.createObjectURL(blob);\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n\n    if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\n      dwldLink.setAttribute(\"target\", \"_blank\");\n    }\n\n    dwldLink.setAttribute(\"href\", url);\n    dwldLink.setAttribute(\"download\", filename + \".csv\");\n    dwldLink.style.visibility = \"hidden\";\n    document.body.appendChild(dwldLink);\n    dwldLink.click();\n    document.body.removeChild(dwldLink);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { User } from '../model/user';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-summary',\n  templateUrl: './user-summary.component.html',\n  styleUrls: ['./user-summary.component.css']\n})\nexport class UserSummaryComponent implements OnInit {\n  user: User = new User(0,'','');\n  loading: boolean = true;\n  errorMessage: string = \"\";\n  showFundsTransfer: boolean = false;\n  isDepositTransfer: boolean = true;\n\n  constructor(private apiService: ApiService, private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    var id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.apiService.getUserById(Number(id)).subscribe({\n      next: result => {\n        this.user = result;\n        this.loading = false;\n      },\n      error: message => {\n        console.log(\"Receved error: \" + message);\n        this.errorMessage = message;\n        this.loading = false;\n      }\n    });\n  }\n\n  withdraw() {\n    this.isDepositTransfer = false;\n    this.showFundsTransfer = true;\n  }\n\n  deposit(){\n    this.isDepositTransfer = true;\n    this.showFundsTransfer = true;\n  }\n\n  closeFunds(status: boolean) {\n    this.showFundsTransfer = !status;\n  }\n}\n","<div [hidden]=\"loading\" class=\"componentBody\">\n  <p class=\"small\">{{user?.name}} {{user?.surname}}</p>\n  <div class=\"fundsTransfer\" *ngIf=\"!showFundsTransfer\">\n    <a (click)=\"deposit()\">Deposit</a> - <a (click)=\"withdraw()\">Withdraw</a>\n  </div>\n  <app-fund-transfer *ngIf=\"showFundsTransfer\" [deposit]=\"isDepositTransfer\" [accountId]=\"user?.account?.id\" (notify)=\"closeFunds($event)\"></app-fund-transfer>\n</div>\n<app-spinner *ngIf=\"loading\"></app-spinner>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spinnerarea\">\n  <div class=\"spinner\"></div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor() {\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-light bg-light\">\n  <ul class=\"nav nav-pills\">\n    <li><a class=\"nav-link\" [routerLink]=\"['/user', 1]\">Home banking</a></li>\n    <li><a class=\"nav-link\" [routerLink]=\"['/account', 1]\">My Account</a></li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgForm, NgModel } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { Currency } from '../model/currency';\nimport { Transaction } from '../model/transaction';\n\n@Component({\n  selector: 'app-fund-transfer',\n  templateUrl: './fund-transfer.component.html',\n  styleUrls: ['./fund-transfer.component.css']\n})\nexport class FundTransferComponent implements OnInit {\n  @Input()\n  public deposit: boolean = true;\n  @Input()\n  public accountId?: number = 0;\n  @Output() notify: EventEmitter<boolean> = new EventEmitter();\n  confirm: string = \"\";\n  currencies: Currency[] = [];\n  message: string = \"\";\n  loading: boolean = true;\n  completed: boolean = false;\n  isErrorNotification: boolean = false;\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.confirm = this.deposit ? \"Deposit\" :  \"Withdraw\";\n\n    if(!this.accountId) {\n      this.message = \"Account not valid\";\n      this.isErrorNotification = true;\n      this.loading = false;\n    }\n\n    this.apiService.getSupportedCurrencies().subscribe({\n      next: result => {\n        this.currencies = result;\n        this.loading = false;\n      },\n      error: message => {\n        this.message = message;\n        this.completed = true;\n        this.isErrorNotification = true;\n        this.loading = false;\n      }\n    });\n  }\n\n  closeFunds() {\n    this.notify.emit(true);\n  }\n\n  validateAmount(field: NgModel) {\n    if(field.value < 0.01) {\n      field.valueAccessor?.writeValue(null);\n      field.control.setErrors({'invalid': true});\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    var transactionAmount = form.value.amount;\n    if(!this.deposit) transactionAmount = form.value.amount * -1;\n\n    let transaction = new Transaction(form.value.description, transactionAmount, form.value.currencies, Number(this.accountId));\n\n    this.apiService.postTransaction(transaction).subscribe({\n      next: result => {\n        this.message = \"Transaction completed successfully\"\n        this.completed = true;\n      },\n      error: message => {\n        this.message = message.error;\n        this.isErrorNotification = true;\n        this.completed = true;\n      }\n    });\n  }\n}\n","<div class=\"formTransfer\">\n  <form #transactionForm=\"ngForm\">\n  <div class=\"col-8\">\n    <p class=\"description\">{{confirm}}</p>\n  </div>\n  <div [hidden]=\"completed\">\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <input id=\"description\" name=\"description\" class=\"form-control\" type=\"text\" ngModel required #descriptionField=\"ngModel\"/>\n      <div [hidden]=\"descriptionField.valid || descriptionField.untouched\" class=\"validation alert alert-danger\">Enter a description</div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"amount\">Amount</label>\n      <input id=\"amount\" name=\"amount\" class=\"form-control\" type=\"number\" ngModel required #amountField=\"ngModel\" (blur)=\"validateAmount(amountField)\">\n      <div [hidden]=\"amountField.valid || amountField.untouched\" class=\"validation alert alert-danger\">Enter a positive amount</div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"currencies\">Currency</label>\n      <select id=\"currencies\" class=\"form-control\" name=\"currencies\" ngModel required #currencyField=\"ngModel\">\n        <option *ngFor=\"let currency of currencies\" [ngValue]=\"currency.id\">\n          {{currency.code}}\n        </option>\n      </select>\n      <div [hidden]=\"currencyField.valid || currencyField.untouched\" class=\"validation alert alert-danger\">Select the currency</div>\n    </div>\n  </div>\n  <div [hidden]=\"!completed\" [ngClass]=\"isErrorNotification ? 'alert alert-danger' : 'alert alert-success'\" role=\"alert\">\n    <span class=\"message\">{{message}}</span>\n  </div>\n  <div class=\"buttons\">\n    <button (click)=\"closeFunds()\" class=\"btn space-right\">Close</button>\n    <button [disabled]=\"transactionForm.invalid\" [hidden]=\"completed\" type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit(transactionForm)\">{{confirm}}</button>\n  </div>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AccountSummaryComponent } from './account-summary/account-summary.component';\nimport { UserSummaryComponent } from './user-summary/user-summary.component';\nimport { FundTransferComponent } from './fund-transfer/fund-transfer.component';\nimport { AccountTransactionsComponent } from './account-transactions/account-transactions.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { ApiService } from './api.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CsvExportService } from './csv-export.service';\n\nconst routes: Routes = [\n  { path: 'account/:id', component: AccountSummaryComponent },\n  { path: 'account', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'user/:id', component: UserSummaryComponent },\n  { path: 'user', redirectTo: '/home', pathMatch: 'full' }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccountSummaryComponent,\n    UserSummaryComponent,\n    FundTransferComponent,\n    AccountTransactionsComponent,\n    SpinnerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [ApiService, CsvExportService, HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Currency {\r\n  public id: number;\r\n  public name: string;\r\n  public code: string;\r\n\r\n  constructor(id: number, name: string, code: string){\r\n    this.id = id;\r\n    this.name = name;\r\n    this.code = code;\r\n  }\r\n}\r\n","<div [hidden]=\"loading\" class=\"componentBody\">\n  <a (click)=\"export()\">Export</a>\n  <table class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th scope=\"col\" sortable=\"description\">Description</th>\n      <th scope=\"col\" sortable=\"amount\">Amount ({{defaultCurrency}})</th>\n      <th scope=\"col\" sortable=\"originalAmount\">Original Amount</th>\n      <th scope=\"col\" sortable=\"originalAmount\">Original Currency</th>\n      <th scope=\"col\" sortable=\"date\">Date</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let transaction of transactions\">\n      <td>{{ transaction.description }}</td>\n      <td>{{ transaction.amount | number }}</td>\n      <td>{{ transaction.originalAmount | number }}</td>\n      <td>{{ transaction.currency?.code }}</td>\n      <td>{{ transaction.dateTime | date:'medium' }}</td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n<app-spinner *ngIf=\"loading\"></app-spinner>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { CsvExportService } from '../csv-export.service';\nimport { Transaction } from '../model/transaction';\n\n@Component({\n  selector: 'app-account-transactions',\n  templateUrl: './account-transactions.component.html',\n  styleUrls: ['./account-transactions.component.css']\n})\nexport class AccountTransactionsComponent implements OnInit {\n  @Input()\n  public accountId: number = 0;\n  @Input()\n  public defaultCurrency: string = \"\";\n  transactions: Transaction[] = [];\n  loading: boolean;\n  errorMessage: string = \"\";\n\n  constructor(private apiService: ApiService, private csvExportService: CsvExportService) {\n    this.loading = true;\n  }\n\n  ngOnInit(): void {\n    this.apiService.getTransactionsByAccountId(this.accountId).subscribe({\n      next: result => {\n        console.log(result);\n        this.transactions = result;\n        this.loading = false;\n      },\n      error: message => {\n        this.handleError(message);\n      }\n    });\n  }\n\n  export() {\n    this.csvExportService.downloadFile(this.transactions, ['description','amount','originalAmount','currency.code','dateTime'], ['Description','Amount','Original Amount','Currency','Date'])\n  }\n\n  handleError(message: string) {\n    console.log(\"Receved error: \" + message);\n    this.errorMessage = message;\n    this.loading = false;\n  }\n}\n","import { Currency } from \"./currency\";\r\n\r\nexport class Account {\r\n  public id?: number;\r\n  public number: number;\r\n  public defaultCurrencyId: number;\r\n  public defaultCurrency: Currency;\r\n  public userId: number;\r\n\r\n  constructor(number: number, defaultCurrencyId: number, userId: number){\r\n    this.number = number;\r\n    this.defaultCurrencyId = defaultCurrencyId;\r\n    this.userId = userId;\r\n    this.defaultCurrency = new Currency(0,'','');\r\n  }\r\n}\r\n","import { Account } from \"./account\";\r\nexport class User {\r\n  public id: number;\r\n  public name: string;\r\n  public surname: string;\r\n  public account?: Account;\r\n\r\n  constructor(id: number, name : string, surname : string){\r\n    this.id = id;\r\n    this.name = name;\r\n    this.surname = surname;\r\n  }\r\n}\r\n","import { Currency } from \"./currency\";\r\n\r\nexport class Transaction {\r\n  public id?: number;\r\n  public description: string;\r\n  public amount?: number;\r\n  public originalAmount: number;\r\n  public currencyId: number;\r\n  public currency?: Currency;\r\n  public accountId: number;\r\n  public dateTime?: string;\r\n\r\n  constructor(description: string, originalAmount: number, currencyId: number, accountId: number){\r\n    this.description = description;\r\n    this.originalAmount = originalAmount;\r\n    this.currencyId = currencyId;\r\n    this.accountId = accountId;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Account } from '../model/account';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-account-summary',\n  templateUrl: './account-summary.component.html',\n  styleUrls: ['./account-summary.component.css']\n})\nexport class AccountSummaryComponent implements OnInit {\n  account: Account = new Account(0,0,0);\n  loading: boolean = true;\n  errorMessage: string = \"\";\n  balance: number = 0;\n  constructor(private apiService: ApiService, private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    let id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.apiService.getAccountById(Number(id)).subscribe({\n      next: result => {\n        console.log(result);\n        this.account = result;\n\n        if(!this.account.id) {\n          this.handleError(\"Invalid account\");\n          return;\n        }\n\n        this.apiService.getAccountBalanceByAccountId(this.account.id).subscribe({\n          next: (balance: number) => {\n            console.log(2);\n            this.balance = balance;\n            this.loading = false;\n          },\n          error: (message: string) => {\n            this.handleError(message);\n          }\n        });\n      },\n      error: message => {\n        this.handleError(message);\n      }\n    });\n  }\n  handleError(message: string) {\n    console.log(\"Receved error: \" + message);\n    this.errorMessage = message;\n    this.loading = false;\n  }\n}\n","<div [hidden]=\"loading\" class=\"componentBody\">\n  <p>Account number: {{account.number}}</p>\n  <p>Balance: {{balance}} {{account.defaultCurrency.code}}</p>\n</div>\n<div [hidden]=\"!errorMessage\" class=\"alert alert-danger\" role=\"alert\">\n  <span class=\"message\">{{errorMessage}}</span>\n</div>\n<app-spinner *ngIf=\"loading\"></app-spinner>\n<app-account-transactions *ngIf=\"account.id && account.defaultCurrency.code\" [accountId]=\"account.id\" [defaultCurrency]=\"account.defaultCurrency.code\"></app-account-transactions>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Transaction } from './model/transaction';\nimport { Account } from './model/account';\nimport { Currency } from './model/currency';\nimport { User } from './model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  baseURL: string = \"https://localhost:5001/api\";\n\n  constructor(private http: HttpClient) {\n  }\n\n  getUserById(userId: number): Observable<User> {\n    return this.http.get<User>(this.baseURL + '/Users/' + userId + '?$expand=Account');\n  }\n\n  getTransactionsByAccountId(accountId: number): Observable<Transaction[]> {\n    return this.http.get<Transaction[]>(this.baseURL + '/Accounts/' + accountId + '/Transactions?$expand=Currency&$orderby=DateTime desc&$top=20');\n  }\n\n  getAccountById(id: number): Observable<Account> {\n    return this.http.get<Account>(this.baseURL + '/Accounts/' + id + '?$expand=DefaultCurrency');\n  }\n\n  getSupportedCurrencies(): Observable<Currency[]> {\n    return this.http.get<Currency[]>(this.baseURL + '/Currencies');\n  }\n\n  getAccountBalanceByAccountId(accountId: number): Observable<number> {\n    return this.http.get<number>(this.baseURL + '/Accounts/' + accountId + '/balance');\n  }\n\n  postTransaction(transaction: Transaction): Observable<Transaction> {\n    return this.http.post<Transaction>(this.baseURL + '/Transactions', transaction);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}